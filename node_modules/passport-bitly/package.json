{
  "name": "passport-bitly",
  "version": "0.1.0",
  "description": "bitly authentication strategy for Passport.",
  "repository": {
    "type": "git",
    "url": "git://github.com/dreadjr/passport-bitly.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib/passport-bitly",
  "dependencies": {
    "pkginfo": "0.2.x",
    "passport-oauth": "0.1.x"
  },
  "devDependencies": {
    "vows": "0.6.x"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# Passport-bitly\n\n[Passport](https://github.com/jaredhanson/passport) strategy for authenticating\nwith [bitly](http://bitly.com/) using the OAuth 2.0 API.\n\nThis module lets you authenticate using bitly, in your Node.js applications.\nBy plugging into Passport, bitly\nauthentication can be easily and unobtrusively integrated into any application or\nframework that supports [Connect](http://www.senchalabs.org/connect/)-style\nmiddleware, including [Express](http://expressjs.com/).\n\n[![Build Status](https://travis-ci.org/dreadjr/passport-bitly.png?branch=master)](https://travis-ci.org/dreadjr/passport-bitly)\n\n## Install\n\n    $ npm install passport-bitly\n\n## Usage\n\n#### Configure Strategy\n\nThe bitly authentication strategy authenticates users using a bitly\naccount and OAuth 2.0 tokens.  The strategy requires a `verify` callback, which\naccepts these credentials and calls `done` providing a user, as well as\n`options` specifying a client ID, client secret, and callback URL.\n\n    passport.use(new BitlyStrategy({\n        clientID: BITLY_CLIENT_ID,\n        clientSecret: BITLY_CLIENT_SECRET,\n        callbackURL: \"http://127.0.0.1:3000/auth/bitly/callback\"\n      },\n      function(accessToken, refreshToken, profile, done) {\n        User.findOrCreate({ bitlyId: profile.id }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'bitly'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/bitly',\n      passport.authenticate('bitly'));\n\n    app.get('/auth/bitly/callback',\n      passport.authenticate('bitly', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/dreadjr/passport-bitly/tree/master/examples/login).\n\n\n## Credits\n\n  - [dreadjr](http://github.com/dreadjr)\n\n\n## Thanks\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2013 dreadjr\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dreadjr/passport-bitly/issues"
  },
  "_id": "passport-bitly@0.1.0",
  "dist": {
    "shasum": "82d0fa0fd047a42e0a09a6cd324ff2f2a2c8f740"
  },
  "_from": "passport-bitly@*",
  "_resolved": "https://registry.npmjs.org/passport-bitly/-/passport-bitly-0.1.0.tgz"
}
